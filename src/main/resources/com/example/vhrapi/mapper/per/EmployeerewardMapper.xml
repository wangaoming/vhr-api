<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.vhrapi.mapper.per.EmployeerewardMapper">
  <resultMap id="BaseResultMap" type="com.example.vhrapi.model.per.Employeereward">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="punishmentDate" jdbcType="DATE" property="punishmentdate" />
    <result column="punishmentClasses" jdbcType="VARCHAR" property="punishmentclasses" />
    <result column="times" jdbcType="INTEGER" property="times" />
    <result column="punishmentPay" jdbcType="INTEGER" property="punishmentpay" />
    <result column="proposer" jdbcType="VARCHAR" property="proposer" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, gender, punishmentDate, punishmentClasses, times, punishmentPay, proposer
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employeereward
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employeereward
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByIds">
    delete from employeereward  where id in
    <foreach collection="array" item="id" open="(" separator="," close=")" >
      #{id}
    </foreach>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.vhrapi.model.per.Employeereward" useGeneratedKeys="true">
    insert into employeereward (`name`, gender, punishmentDate, 
      punishmentClasses, times, punishmentPay, 
      proposer)
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{punishmentdate,jdbcType=DATE}, 
      #{punishmentclasses,jdbcType=VARCHAR}, #{times,jdbcType=INTEGER}, #{punishmentpay,jdbcType=INTEGER}, 
      #{proposer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.vhrapi.model.per.Employeereward" useGeneratedKeys="true">
    insert into employeereward
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="punishmentdate != null">
        punishmentDate,
      </if>
      <if test="punishmentclasses != null">
        punishmentClasses,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="punishmentpay != null">
        punishmentPay,
      </if>
      <if test="proposer != null">
        proposer,
      </if>
    </trim>

  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.vhrapi.model.per.Employeereward">
    update employeereward
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="punishmentdate != null">
        punishmentDate = #{punishmentdate,jdbcType=DATE},
      </if>
      <if test="punishmentclasses != null">
        punishmentClasses = #{punishmentclasses,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=INTEGER},
      </if>
      <if test="punishmentpay != null">
        punishmentPay = #{punishmentpay,jdbcType=INTEGER},
      </if>
      <if test="proposer != null">
        proposer = #{proposer,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.vhrapi.model.per.Employeereward">
    update employeereward
    set `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      punishmentDate = #{punishmentdate,jdbcType=DATE},
      punishmentClasses = #{punishmentclasses,jdbcType=VARCHAR},
      times = #{times,jdbcType=INTEGER},
      punishmentPay = #{punishmentpay,jdbcType=INTEGER},
      proposer = #{proposer,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="batchInsert">
    insert into pemployeereward (name, createDate, enabled) values
    <foreach collection="list" item="employeereward" separator=",">
      (#{employeereward.name,jdbcType=VARCHAR}, #{employeereward.createDate, jdbcType=TIMESTAMP},
      #{employeereward.enabled, jdbcType=BIT})
    </foreach>
  </update>
</mapper>